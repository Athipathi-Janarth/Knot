/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.VenueManagerPanel;

import Business.EcoSystem;
import Employee.Employee;
import Model.MenuItem.BakeryMenuItem;
import Model.MenuItem.VenueMenuItem;
import Model.Menus.BakeryMenu;
import Model.Menus.VenueMenu;
import Models.Organization.*;
import Network.Network;
import ui.SystemAdmin.*;
import java.awt.Color;
import java.awt.Component;
import java.awt.Image;
import java.io.File;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;
import ui.BakerPanel.bakerItemsPanel;

/**
 *
 * @author athipathi
 */
public class venueManagerItemsPanel extends javax.swing.JPanel {

    /**
     * Creates new form networkPanel
     */
   EcoSystem system;
   Organization org;
   Employee employee;
   Venue venue;
   public String photoPath;
   
    public venueManagerItemsPanel(EcoSystem system,Employee employee) {
        initComponents();
        this.system=system;
        this.employee=employee;
        adminPanelCard.setBackground(new Color(0,0,0,90));
        venue = getVenue(employee.getOrgId());
        ItemsTable.getColumn("Image").setCellRenderer(new venueManagerItemsPanel.CellRenderer());
        populateTable(venue.getMenu());
    }
     private Venue getVenue(long orgId){
       Network network = system.retriveNetwork(employee.getNetworkname());
        Venue currentVenue=null;
        ArrayList<Venue> venues = network.getVenueDirectory().getVenueDirectory();
       
        for(int i=0; i < venues.size();i++){         
            if(venues.get(i).getId() == orgId ){
                System.out.println("Venue found");
                currentVenue= venues.get(i);
            }
        }
       return currentVenue;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        adminPanelCard = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ItemsTable = new javax.swing.JTable();
        btnCreate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        venueName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        capacityValue = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        PriceValue = new javax.swing.JTextField();
        photo = new javax.swing.JLabel();
        ImageLabel = new javax.swing.JLabel();
        eventName = new javax.swing.JComboBox<>();
        adminBackgroundImg = new javax.swing.JLabel();

        setSize(new java.awt.Dimension(977, 630));
        setLayout(null);

        ItemsTable.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        ItemsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Venue", "Event Type", "Capacity", "Price", "Image", "Venue"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        ItemsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ItemsTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(ItemsTable);
        if (ItemsTable.getColumnModel().getColumnCount() > 0) {
            ItemsTable.getColumnModel().getColumn(5).setMinWidth(0);
            ItemsTable.getColumnModel().getColumn(5).setPreferredWidth(0);
            ItemsTable.getColumnModel().getColumn(5).setMaxWidth(0);
        }

        btnCreate.setText("Add Item");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Venue");

        venueName.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Event type");

        jLabel3.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Capacity");

        capacityValue.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Price");

        PriceValue.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N

        photo.setText("+ Add photo");
        photo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                photoMouseClicked(evt);
            }
        });

        ImageLabel.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        ImageLabel.setForeground(new java.awt.Color(255, 255, 255));
        ImageLabel.setText("Image");

        eventName.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        eventName.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Reception Hall", "Ball Room", "Beach Resort", "Garden" }));

        javax.swing.GroupLayout adminPanelCardLayout = new javax.swing.GroupLayout(adminPanelCard);
        adminPanelCard.setLayout(adminPanelCardLayout);
        adminPanelCardLayout.setHorizontalGroup(
            adminPanelCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminPanelCardLayout.createSequentialGroup()
                .addGroup(adminPanelCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(adminPanelCardLayout.createSequentialGroup()
                        .addGap(85, 85, 85)
                        .addGroup(adminPanelCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 820, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(adminPanelCardLayout.createSequentialGroup()
                                .addGroup(adminPanelCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(adminPanelCardLayout.createSequentialGroup()
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(237, 237, 237))
                                    .addGroup(adminPanelCardLayout.createSequentialGroup()
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(venueName, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(adminPanelCardLayout.createSequentialGroup()
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(capacityValue, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(adminPanelCardLayout.createSequentialGroup()
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(PriceValue, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(162, 162, 162)
                                .addGroup(adminPanelCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(photo, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ImageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(adminPanelCardLayout.createSequentialGroup()
                        .addGap(286, 286, 286)
                        .addComponent(btnCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(adminPanelCardLayout.createSequentialGroup()
                        .addGap(244, 244, 244)
                        .addComponent(eventName, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(185, Short.MAX_VALUE))
        );
        adminPanelCardLayout.setVerticalGroup(
            adminPanelCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminPanelCardLayout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(adminPanelCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(adminPanelCardLayout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(adminPanelCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(venueName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(36, 36, 36)
                        .addGroup(adminPanelCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(eventName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addGroup(adminPanelCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(capacityValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33)
                        .addGroup(adminPanelCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(PriceValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(adminPanelCardLayout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(ImageLabel)
                        .addGap(4, 4, 4)
                        .addComponent(photo, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 143, Short.MAX_VALUE)
                        .addGroup(adminPanelCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(69, 69, 69))))
        );

        add(adminPanelCard);
        adminPanelCard.setBounds(0, 0, 1090, 630);

        adminBackgroundImg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/venue.jpeg"))); // NOI18N
        add(adminBackgroundImg);
        adminBackgroundImg.setBounds(0, 0, 1090, 640);
    }// </editor-fold>//GEN-END:initComponents
     public ImageIcon ResizeImage(String ImagePath) {
        ImageIcon MyImage = new ImageIcon(ImagePath);
        Image img = MyImage.getImage();
        Image newImg = img.getScaledInstance(photo.getWidth(), photo.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon image = new ImageIcon(newImg);
        return image;
    }
    private void photoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_photoMouseClicked
        JFileChooser file = new JFileChooser();
        file.setCurrentDirectory(new File(System.getProperty("user.home")));
        FileNameExtensionFilter filter = new FileNameExtensionFilter("*.Images", "jpg", "gif", "png");
        file.addChoosableFileFilter(filter);
        int result = file.showSaveDialog(null);
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = file.getSelectedFile();
            String path = selectedFile.getAbsolutePath();
            photoPath = path;
            photo.setIcon(ResizeImage(path));
        } else if (result == JFileChooser.CANCEL_OPTION) {
            System.out.println("No File Select");
        }
    }//GEN-LAST:event_photoMouseClicked

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        // TODO add your handling code here:
        String name = venueName.getText().trim();
        String type = eventName.getSelectedItem().toString();
        int capacity =  Integer.valueOf(capacityValue.getText().trim());
        float price = Float.valueOf(PriceValue.getText().trim());
        venue.getMenu().addVenueMenuItem(new VenueMenuItem(type,capacity,photoPath,name,venue.getMenu().getMenuItemId(),price));               
        populateTable(venue.getMenu());
        resetForm();
    }//GEN-LAST:event_btnCreateActionPerformed

    private void ItemsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ItemsTableMouseClicked
                                    
        int selectedRowIndex = ItemsTable.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) ItemsTable.getModel();
        VenueMenuItem menuitem = (VenueMenuItem) model.getValueAt(selectedRowIndex, 5); 
        venueName.setText(menuitem.getItemName());
        capacityValue.setText(menuitem.getCapacity()+"");
        PriceValue.setText(Float.toString(menuitem.getPrice()));
        eventName.setSelectedItem(menuitem.getType());
                                     
        // TODO add your handling code here:
    }//GEN-LAST:event_ItemsTableMouseClicked

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = ItemsTable.getSelectedRow();
        
        if(selectedRowIndex<0)
        {
            JOptionPane.showMessageDialog(this, "Select a item to delete it.");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) ItemsTable.getModel();
        VenueMenuItem menuitem = (VenueMenuItem) model.getValueAt(selectedRowIndex, 5);
        venue.getMenu().getVenueMenu().remove(menuitem);
        resetForm();
        populateTable(venue.getMenu());
    }//GEN-LAST:event_btnDeleteActionPerformed
     private void resetForm() {
        venueName.setText("");
        capacityValue.setText("");
        PriceValue.setText("");
        photo.setIcon(null);
    }
     
     private void populateTable(VenueMenu menu){  
        DefaultTableModel model = (DefaultTableModel) ItemsTable.getModel();
        model.setRowCount(0);
        for(int i=0;i< menu.getVenueMenu().size();i++){
            VenueMenuItem menuItem = menu.getVenueMenu().get(i);
            javax.swing.JLabel photo2;
            photo2=new JLabel();
            photo2.setIcon(ResizeImageTable(menuItem.getPhoto()));
            model.addRow(new Object[]{
              menuItem.getItemName(),
              menuItem.getType(),
              menuItem.getCapacity(),
              menuItem.getPrice(),
              photo2,
              menuItem
            });
        }
    }
     class CellRenderer implements TableCellRenderer {

        @Override
        public Component getTableCellRendererComponent(JTable table,
                Object value,
                boolean isSelected,
                boolean hasFocus,
                int row,
                int column) {

            TableColumn tb = ItemsTable.getColumn("Image");
            tb.setMaxWidth(60);
            tb.setMinWidth(60);

            ItemsTable.setRowHeight(60);

            return (Component) value;
        }

    }
    public ImageIcon ResizeImageTable(String ImagePath) {
        ImageIcon MyImage = new ImageIcon(ImagePath);
        Image img = MyImage.getImage();
        Image newImg = img.getScaledInstance(60, 60, Image.SCALE_SMOOTH);
        ImageIcon image = new ImageIcon(newImg);
        return image;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ImageLabel;
    private javax.swing.JTable ItemsTable;
    private javax.swing.JTextField PriceValue;
    private javax.swing.JLabel adminBackgroundImg;
    private javax.swing.JPanel adminPanelCard;
    private javax.swing.JButton btnCreate;
    private javax.swing.JButton btnDelete;
    private javax.swing.JTextField capacityValue;
    private javax.swing.JComboBox<String> eventName;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel photo;
    private javax.swing.JTextField venueName;
    // End of variables declaration//GEN-END:variables
}
